description <http://example.com/actuator/description/usecases#> as usecases {
	uses <http://example.com/actuator/vocabulary/base#> as base
	uses <http://example.com/actuator/vocabulary/actuator#> as actuator
	extends <http://example.com/actuator/description/objectives#> as objectives
	
	instance provide-actuation-to-aileron : actuator:UseCase [
		base:hasIdentifier "UC1"
		base:hasCanonicalName "provideActuationToAileron"
		base:aggregates transmit-actuation-force
		base:aggregates maintain-position
		base:aggregates execute-failsafe-response
		base:aggregates recover-energy
		actuator:InteractsWith environment
		actuator:InteractsWith wing
		actuator:InteractsWith aileron
		actuator:InteractsWith flight-control-computer
		actuator:InteractsWith electric-power-supply
		actuator:Achieves objectives:transmitting-actuation-force
		]
		
	instance transmit-actuation-force : actuator:UseCase [
		base:hasIdentifier "UC1_1"
		base:hasCanonicalName "transmitActuationForce"
		]
		
	instance maintain-position : actuator:UseCase [
		base:hasIdentifier "UC1_2"
		base:hasCanonicalName "maintainPosition"
		]
		
	instance execute-failsafe-response : actuator:UseCase [
		base:hasIdentifier "UC1_3"
		base:hasCanonicalName "executeFailSafeResponse"
		]
		
	instance recover-energy : actuator:UseCase [
		base:hasIdentifier "UC1_4"
		base:hasCanonicalName "recoverEnergy"
		]
		
	instance environment : actuator:Actor[
		base:hasIdentifier "Actor1"
		base:hasCanonicalName "Environment"
		
	]
	
	instance wing : actuator:Actor[
		base:hasIdentifier "Actor2"
		base:hasCanonicalName "Wing"
	]
	
	instance aileron : actuator:Actor[
		base:hasIdentifier "Actor3"
		base:hasCanonicalName "Aileron"
	]
	
	instance flight-control-computer : actuator:Actor[
		base:hasIdentifier "Actor4"
		base:hasCanonicalName "Flight Control Computer"
	]
	
	instance electric-power-supply : actuator:Actor[
		base:hasIdentifier "Actor5"
		base:hasCanonicalName "Electric Power Supply"
	]
}